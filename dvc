# workflow for dvc
# install dvc dvc[s3] through pip or package manager
# authorize with s3 storage using appropriate config files
pip install dvc dvc[s3]

# for dvc-data command
pip install dvc-data[cli]

# some times boto should be added additionally.
pip instal boto

# install using conda
conda install -c conda-forge dvc
# might be better to install using pip since dvc[cli] can only be installed using pip
# Step 1: initialize DVC
dvc init

# Step 2: DVC stages some files and you just need to commit it
git commit -m "Initialize DVC"

# Step 3: add data
dvc add path/to/data
git add path/to/data.dvc path/to/.gitignore
git commit -m "added data to storage"
git push

# Step 4(optional): if you use remote storage
# push to dvc
dvc push

# see status
dvc status

# checkout the version of data from last commit
dvc checkout

# checkout specific file
dvc checkout -- /path/to/file

# list file tracked by dvc in current directory
dvc list --dvc-only <path>

# to look inside a nested directory using dvc
# where data is a directory inside dvc
dvc list . data --dvc-only

# compute the hash for a directory
dvc-data build /path/to/dir
